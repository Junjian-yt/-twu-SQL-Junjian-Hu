Q1: Answer :    Anand Beck    SQL:SELECT member.name FROM memberWHERE member.id IN (SELECT checkout_item.member_id FROM checkout_item, bookWHERE checkout_item.book_id = book.id AND book.title = 'The Hobbit');Q2:Answer:		37SQL:SELECT COUNT(id)FROM memberWHERE NOT member.id IN (SELECT member_id FROM checkout_itemWHERE checkout_item.book_id IS NOT NULL OR checkout_item.movie_id IS NOT NULL);Q3:Answer:"1984""Catcher in the Rye""Crouching Tiger, Hidden Dragon""Domain Driven Design""Fellowship of the Ring""Lawrence of Arabia""Office Space""Thin Red Line""To Kill a Mockingbird""Tom Sawyer"SQL:SELECT titleFROM bookWHERE NOT book.id IN (SELECT book_id FROM checkout_itemWHERE checkout_item.book_id IS NOT NULL)UNIONSELECT title FROM movieWHERE NOT movie.id IN (SELECT movie_idFROM checkout_itemWHERE checkout_item.movie_id IS NOT NULL)Q4:SQL:INSERT INTO member (name)VALUES ('JUNJIAN Hu');INSERT INTO book (title)VALUES ('The Pragmatic Programmer');INSERT INTO checkout_item (member_id, book_id, movie_id)VALUES ((select id FROM memberWHERE member.name = 'JUNJIAN Hu'), (select id FROM bookWHERE book.title = 'The Pragmatic Programmer'), NULL)Q5:Answer: "Anand Beck""Frank Smith"SQL:SELECT name FROM memberWHERE member.id IN (SELECT member_idFROM checkout_itemWHERE checkout_item.book_id IS NOT NULL OR checkout_item.movie_id IS NOT NULLGROUP BY member_idhaving count(*)>1)